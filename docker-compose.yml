version: "3.8"
name: Ketu_v1
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    environment:
      - APP_SERVER_HOST=0.0.0.0
      - APP_SERVER_PORT=8090
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ke2?sslmode=disable
      - APP_JWT_ACCESSSECRET=dfn48i3F23fV
      - APP_JWT_REFRESHSECRET=AFjs234orFr9902!F
      - APP_JWT_ACCESSTTL=15m
      - APP_JWT_REFRESHTTL=720h

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ke2
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-insight:
    image: redislabs/redisinsight:latest
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - REDIS_URI=redis://redis:6379
      - RICONNECT_MODE=true
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8001/healthcheck",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
  redis_data:
  redis_insight_data:

networks:
  app-network:
    driver: bridge
